def PI    3.14159265359     end
def TAU   PI 2.0 *          end
def E     2.718281828459045 end
def PHI   1.618033988749895 end
def sqrt2 1.414213562373095 end
def sqrt3 1.732050807568877 end
def ln2   0.693147180559945 end
def ln10  2.302585092994046 end
def log2e 1.442695040888963 end

# Takes a number and returns -1 if it is negative or 1 if positive
# ( n -- s )
proc sign
    0 < if -1 else 1 end
end

# Takes a number and returns its absolute value
# ( a -- b )
proc abs
    dup sign *
end

# Takes 2 numbers and returns the number with the lowest value
# ( a b -- a ) or ( a b -- b )
proc min
    over over < if
        drop
    else
        swap drop
    end
end

# Takes 2 numbers and returns the number with the highest value
# ( a b -- a ) or ( a b -- b )
proc max
    over over > if
        drop
    else
        swap drop
    end
end

# Ensures that the returned value `y` is not less than the specified minimum `a` 
# and not greater than the specified maximum `b`. If the value is within the 
# range, it is returned unchanged (`x`).
# ( x a b -- y )
proc clamp
    as x a b let
    x a < if a return end
    x b > if b return end
    x
end

# TODO: Implement ln(x)
# TODO: Implement log(x, b)
# TODO: Implement sqrt(x)
# TODO: Implement cbrt(x)

# TODO: Implement rand()
